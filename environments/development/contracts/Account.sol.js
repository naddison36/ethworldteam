// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"getBICFI","outputs":[{"name":"BICFI","type":"bytes32"}],"type":"function"},{"constant":false,"inputs":[],"name":"getName","outputs":[{"name":"name","type":"string"}],"type":"function"},{"constant":false,"inputs":[],"name":"getAccountType","outputs":[{"name":"accountType","type":"string"}],"type":"function"},{"constant":false,"inputs":[],"name":"getCurrency","outputs":[{"name":"currency","type":"string"}],"type":"function"},{"constant":false,"inputs":[],"name":"getIdentifier","outputs":[{"name":"identifier","type":"bytes32"}],"type":"function"},{"constant":false,"inputs":[{"name":"accountOwnerIdentity","type":"address"}],"name":"addIdentity","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[],"name":"isCallerFIHoldingAccount","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[],"name":"isCallerAnAccountOwner","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"inputs":[{"name":"FI_identity","type":"address"},{"name":"BICFI","type":"bytes32"},{"name":"identifier","type":"bytes32"},{"name":"accountType","type":"string"},{"name":"currency","type":"string"},{"name":"name","type":"string"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"account","type":"Account"},{"indexed":false,"name":"addedAccountOwnerIdentity","type":"address"}],"name":"IdentityAdded","type":"event"}],
    binary: "60606040526040516106ab3803806106ab83398101604052805160805160a05160c05160e0516101005194959394929391820192908201910160068054600160a060020a03191687179055600085815560018581556002805486519382905290926020601f93831615610100026000190190921684900483018290047f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9081019391929091908801908390106100ee57805160ff19168380011785555b5061011e9291505b8082111561017757600081556001016100c4565b5050505050505050610477806102346000396000f35b828001600101855582156100bc579182015b828111156100bc578251826000505591602001919060010190610100565b50508160036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017b57805160ff19168380011785555b506101ab9291506100c4565b5090565b8280016001018555821561016b579182015b8281111561016b57825182600050559160200191906001019061018d565b50508060046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020457805160ff19168380011785555b506100d89291506100c4565b828001600101855582156101f8579182015b828111156101f8578251826000505591602001919060010190610216566060604052361561006c5760e060020a600035046301c699b3811461007457806317d7de7c1461007e57806352d6a0a3146100e75780636945c1fd1461014e578063aa23e03d146101b8578063b9093fc6146101c3578063d50c8b2a146101eb578063df1c399f14610212575b61027d610002565b6102006000545b90565b61027f60408051602081810183526000825282516004805460026001821615610100026000190190911604601f810184900484028301840190955284825292939092918301828280156103185780601f106102ed57610100808354040283529160200191610318565b61027f6040805160208181018352600082528251600280546001811615610100026000190116819004601f810184900484028301840190955284825292939092918301828280156103185780601f106102ed57610100808354040283529160200191610318565b60408051602081810183526000825260038054845160026001831615610100026000190190921691909104601f810184900484028201840190955284815261027f9490928301828280156103185780601f106102ed57610100808354040283529160200191610318565b61020060015461007b565b6102006004356006546000908190600160a060020a039081163391909116146103ab576103a5565b600654600160a060020a039081163391909116145b60408051918252519081900360200190f35b6102006000805b6005548110156102795733600160a060020a03166005600050828154811015610002576000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00154600160a060020a0316141561032457600191505b5090565b005b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b820191906000526020600020905b8154815290600101906020018083116102fb57829003601f168201915b5050505050905061007b565b600101610219565b50505060009283525060209182902001805473ffffffffffffffffffffffffffffffffffffffff1916851790556040805130600160a060020a03908116825286169281019290925280517f5e6980326838d8460df43db1f77f5b990d9ce470a5306b9bf05c3131ea192dc19281900390910190a1600091505b50919050565b5060005b6005548110156104135782600160a060020a03166005600050828154811015610002576000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00154600160a060020a0316141561046f57600091506103a5565b6005805460018101808355828183801582901161032c57600083905261032c907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09081019083015b80821115610279576000815560010161045b565b6001016103af56",
    unlinked_binary: "60606040526040516106ab3803806106ab83398101604052805160805160a05160c05160e0516101005194959394929391820192908201910160068054600160a060020a03191687179055600085815560018581556002805486519382905290926020601f93831615610100026000190190921684900483018290047f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9081019391929091908801908390106100ee57805160ff19168380011785555b5061011e9291505b8082111561017757600081556001016100c4565b5050505050505050610477806102346000396000f35b828001600101855582156100bc579182015b828111156100bc578251826000505591602001919060010190610100565b50508160036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017b57805160ff19168380011785555b506101ab9291506100c4565b5090565b8280016001018555821561016b579182015b8281111561016b57825182600050559160200191906001019061018d565b50508060046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020457805160ff19168380011785555b506100d89291506100c4565b828001600101855582156101f8579182015b828111156101f8578251826000505591602001919060010190610216566060604052361561006c5760e060020a600035046301c699b3811461007457806317d7de7c1461007e57806352d6a0a3146100e75780636945c1fd1461014e578063aa23e03d146101b8578063b9093fc6146101c3578063d50c8b2a146101eb578063df1c399f14610212575b61027d610002565b6102006000545b90565b61027f60408051602081810183526000825282516004805460026001821615610100026000190190911604601f810184900484028301840190955284825292939092918301828280156103185780601f106102ed57610100808354040283529160200191610318565b61027f6040805160208181018352600082528251600280546001811615610100026000190116819004601f810184900484028301840190955284825292939092918301828280156103185780601f106102ed57610100808354040283529160200191610318565b60408051602081810183526000825260038054845160026001831615610100026000190190921691909104601f810184900484028201840190955284815261027f9490928301828280156103185780601f106102ed57610100808354040283529160200191610318565b61020060015461007b565b6102006004356006546000908190600160a060020a039081163391909116146103ab576103a5565b600654600160a060020a039081163391909116145b60408051918252519081900360200190f35b6102006000805b6005548110156102795733600160a060020a03166005600050828154811015610002576000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00154600160a060020a0316141561032457600191505b5090565b005b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b820191906000526020600020905b8154815290600101906020018083116102fb57829003601f168201915b5050505050905061007b565b600101610219565b50505060009283525060209182902001805473ffffffffffffffffffffffffffffffffffffffff1916851790556040805130600160a060020a03908116825286169281019290925280517f5e6980326838d8460df43db1f77f5b990d9ce470a5306b9bf05c3131ea192dc19281900390910190a1600091505b50919050565b5060005b6005548110156104135782600160a060020a03166005600050828154811015610002576000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00154600160a060020a0316141561046f57600091506103a5565b6005805460018101808355828183801582901161032c57600083905261032c907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09081019083015b80821115610279576000815560010161045b565b6001016103af56",
    address: "",
    generated_with: "2.0.6",
    contract_name: "Account"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Account error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Account error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Account error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Account error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Account = Contract;
  }

})();
